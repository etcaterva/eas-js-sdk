openapi: 3.0.0
info:
  title: EAS API
  version: 1.0.0
servers:
  - url: '/should-be-overriden'
paths:
  /tournament/:
    post:
      operationId: tournament_create
      responses:
        '201':
          description: Tournament successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
      tags:
        - tournament
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
        required: true
    parameters: []
  '/tournament/{id}/':
    get:
      operationId: tournament_read
      responses:
        '200':
          description: The details of the requested tournament
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
      tags:
        - tournament
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/tournament/{id}/toss/':
    post:
      operationId: tournament_toss
      responses:
        '201':
          description: A result of the tournament
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentResult'
      tags:
        - tournament
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/tournament/{id}/participants/':
    post:
      operationId: tournament_participants_add
      responses:
        '201':
          description: Object created
        '304':
          description: Not Modified
      tags:
        - tournament
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
        required: true
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /groups/:
    post:
      operationId: groups_create
      responses:
        '201':
          description: Groups successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
      tags:
        - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Groups'
        required: true
    parameters: []
  '/groups/{id}/':
    get:
      operationId: groups_read
      responses:
        '200':
          description: The details of the requested groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
      tags:
        - groups
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/groups/{id}/toss/':
    post:
      operationId: groups_toss
      responses:
        '201':
          description: A result of the groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsResult'
      tags:
        - groups
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/groups/{id}/participants/':
    post:
      operationId: groups_participants_add
      responses:
        '201':
          description: Object created
        '304':
          description: Not Modified
      tags:
        - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
        required: true
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /lottery/:
    post:
      operationId: lottery_create
      responses:
        '201':
          description: Lottery successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lottery'
      tags:
        - lottery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lottery'
        required: true
    parameters: []
  '/lottery/{id}/':
    get:
      operationId: lottery_read
      responses:
        '200':
          description: The details of the requested lottery
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lottery'
      tags:
        - lottery
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/lottery/{id}/toss/':
    post:
      operationId: lottery_toss
      responses:
        '201':
          description: A result of the lottery
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotteryResult'
      tags:
        - lottery
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/lottery/{id}/participants/':
    post:
      operationId: lottery_participants_add
      responses:
        '201':
          description: Object created
        '304':
          description: Not Modified
      tags:
        - lottery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
        required: true
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /raffle/:
    post:
      operationId: raffle_create
      responses:
        '201':
          description: Raffle successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Raffle'
      tags:
        - raffle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Raffle'
        required: true
    parameters: []
  '/raffle/{id}/':
    get:
      operationId: raffle_read
      responses:
        '200':
          description: The details of the requested raffle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Raffle'
      tags:
        - raffle
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/raffle/{id}/toss/':
    post:
      operationId: raffle_toss
      responses:
        '201':
          description: A result of the draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RaffleResult'
      tags:
        - raffle
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/raffle/{id}/participants/':
    post:
      operationId: raffle_participants_add
      responses:
        '201':
          description: Object created
        '304':
          description: Not Modified
      tags:
        - raffle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
        required: true
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /letter/:
    post:
      operationId: letter_create
      responses:
        '201':
          description: The Letter draw was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Letter'
      tags:
        - letter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Letter'
        required: true
    parameters: []
  '/letter/{id}/':
    get:
      operationId: letter_read
      responses:
        '200':
          description: The details of the requested draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Letter'
      tags:
        - letter
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/letter/{id}/toss/':
    post:
      operationId: letter_toss
      responses:
        '201':
          description: A result of the draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterResult'
      tags:
        - letter
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /random_number/:
    post:
      operationId: random_number_create
      responses:
        '201':
          description: The RandomNumber draw was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RandomNumber'
      tags:
        - random_number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RandomNumber'
        required: true
    parameters: []
  '/random_number/{id}/':
    get:
      operationId: random_number_read
      responses:
        '200':
          description: The details of the requested draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RandomNumber'
      tags:
        - random_number
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/random_number/{id}/toss/':
    post:
      operationId: random_number_toss
      responses:
        '201':
          description: A result of the draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RandomNumberResult'
      tags:
        - random_number
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /spinner/:
    post:
      operationId: spinner_create
      responses:
        '201':
          description: The Spinner draw was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spinner'
      tags:
        - spinner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spinner'
        required: true
    parameters: []
  '/spinner/{id}/':
    get:
      operationId: spinner_read
      responses:
        '200':
          description: The details of the requested draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spinner'
      tags:
        - spinner
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/spinner/{id}/toss/':
    post:
      operationId: spinner_toss
      responses:
        '201':
          description: A result of the draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpinnerResult'
      tags:
        - spinner
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /coin/:
    post:
      operationId: coin_create
      responses:
        '201':
          description: The Coin draw was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coin'
      tags:
        - coin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coin'
        required: true
    parameters: []
  '/coin/{id}/':
    get:
      operationId: coin_read
      responses:
        '200':
          description: The details of the requested draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coin'
      tags:
        - coin
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/coin/{id}/toss/':
    post:
      operationId: coin_toss
      responses:
        '201':
          description: A result of the draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinResult'
      tags:
        - coin
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /link/:
    post:
      operationId: link_create
      responses:
        '201':
          description: Links successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
      tags:
        - link
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
        required: true
    parameters: []
  '/link/{id}/':
    get:
      operationId: link_read
      responses:
        '200':
          description: The details of the requested link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
      tags:
        - link
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/link/{id}/toss/':
    post:
      operationId: link_toss
      responses:
        '201':
          description: A result of the link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResult'
      tags:
        - link
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /secret-santa/:
    post:
      operationId: secret_santa_create
      responses:
        '201':
          description: Create and Toss a secret santa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSantaCreateResponse'
      tags:
        - secret_santa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretSanta'
        required: true
    parameters: []
  '/secret-santa/{id}/':
    get:
      operationId: secret_santa_result_get
      responses:
        '200':
          description: Details of a Secret Santa Result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSantaResult'
      tags:
        - secret_santa
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/secret-santa-admin/{id}/':
    get:
      operationId: secret_santa_result_admin_get
      responses:
        '200':
          description: Management info of a secret santa draw.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSantaAdminResponse'
      tags:
        - secret_santa
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/secret-santa-admin/{draw_id}/{result_id}/':
    post:
      operationId: secret_santa_result_admin_post
      responses:
        '200':
          description: Resend the email of a secret santa result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSantaResendEmailResponse'
      tags:
        - secret_santa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretSantaResendEmail'
    parameters:
      - name: draw_id
        in: path
        required: true
        schema:
          type: string
      - name: result_id
        in: path
        required: true
        schema:
          type: string
  '/promo-code/redeem/':
    post:
      operationId: redeem_promo_code
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedeemPromoCode'
        required: true
      responses:
        '200':
          description: Certifies a draw with a promo code
      tags:
        - paypal
  '/paypal/create/':
    post:
      operationId: paypal_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaypalCreatePayload'
        required: true
      responses:
        '200':
          description: Initiates a new PayPal payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaypalResponse'
      tags:
        - paypal
  /instagram/:
    post:
      operationId: instagram_create
      responses:
        '201':
          description: The Instagram draw was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instagram'
      tags:
        - instagram
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instagram'
        required: true
    parameters: []
  '/instagram/{id}/':
    get:
      operationId: instagram_read
      responses:
        '200':
          description: The details of the requested draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instagram'
      tags:
        - instagram
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/instagram/{id}/toss/':
    post:
      operationId: instagram_toss
      responses:
        '201':
          description: A result of the draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstagramResult'
      tags:
        - instagram
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/instagram/{id}/retoss/':
    patch:
      operationId: instagram_retoss
      responses:
        '201':
          description: A result of the draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstagramResult'
      tags:
        - instagram
      requestBody:
        $ref: '#/components/requestBodies/DrawReTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /tiktok/:
    post:
      operationId: tiktok_create
      responses:
        '201':
          description: The tiktok draw was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tiktok'
      tags:
        - tiktok
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tiktok'
        required: true
    parameters: []
  '/tiktok/{id}/':
    get:
      operationId: tiktok_read
      responses:
        '200':
          description: The details of the requested draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tiktok'
      tags:
        - tiktok
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/tiktok/{id}/toss/':
    post:
      operationId: tiktok_toss
      responses:
        '201':
          description: A result of the draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiktokResult'
      tags:
        - tiktok
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/tiktok/{id}/retoss/':
    patch:
      operationId: tiktok_retoss
      responses:
        '201':
          description: A result of the draw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiktokResult'
      tags:
        - tiktok
      requestBody:
        $ref: '#/components/requestBodies/DrawReTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /shifts/:
    post:
      operationId: shifts_create
      responses:
        '201':
          description: Shifts successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shifts'
      tags:
        - shifts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shifts'
        required: true
    parameters: []
  '/shifts/{id}/':
    get:
      operationId: shifts_read
      responses:
        '200':
          description: The details of the requested shifts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shifts'
      tags:
        - shifts
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/shifts/{id}/toss/':
    post:
      operationId: shifts_toss
      responses:
        '201':
          description: A result of the shifts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftsResult'
      tags:
        - shifts
      requestBody:
        $ref: '#/components/requestBodies/DrawTossPayload'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
components:
  requestBodies:
    DrawTossPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DrawTossPayload'
      required: true
    DrawReTossPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DrawReTossPayload'
  schemas:
    DrawMetadata:
      required:
        - client
        - key
        - value
      type: object
      properties:
        client:
          type: string
          maxLength: 100
          minLength: 1
        key:
          type: string
          maxLength: 100
          minLength: 1
        value:
          type: string
          minLength: 1
    BaseObject:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          minLength: 1
        created_at:
          type: string
          format: date-time
          readOnly: true
    Prize:
      allOf:
        - $ref: '#/components/schemas/BaseObject'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
              minLength: 1
            url:
              type: string
              format: uri
              maxLength: 200
              minLength: 1
    Participant:
      allOf:
        - $ref: '#/components/schemas/BaseObject'
        - type: object
          required:
            - name
          properties:
            name:
              type: string
              minLength: 1
            facebook_id:
              type: string
              maxLength: 100
              minLength: 1
    DrawTossPayload:
      type: object
      properties:
        schedule_date:
          type: string
          format: date-time
    DrawReTossPayload:
      type: object
      properties:
        prize_id:
          type: string
          minLength: 1
    BaseDraw:
      allOf:
        - $ref: '#/components/schemas/BaseObject'
        - type: object
          properties:
            updated_at:
              type: string
              format: date-time
              readOnly: true
            title:
              type: string
              minLength: 1
            description:
              type: string
              minLength: 1
            private_id:
              type: string
              readOnly: true
              minLength: 1
            metadata:
              type: array
              items:
                $ref: '#/components/schemas/DrawMetadata'
            payments:
              type: array
              items:
                type: string
                enum:
                  - CERTIFIED
                  - ADFREE
                  - SUPPORT
    Raffle:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          required:
            - prizes
            - participants
          properties:
            prizes:
              type: array
              items:
                $ref: '#/components/schemas/Prize'
            participants:
              type: array
              items:
                $ref: '#/components/schemas/Participant'
            results:
              type: array
              items:
                $ref: '#/components/schemas/RaffleResult'
              readOnly: true
    Lottery:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          required:
            - participants
          properties:
            number_of_results:
              type: integer
              default: 1
            participants:
              type: array
              items:
                $ref: '#/components/schemas/Participant'
            results:
              type: array
              items:
                $ref: '#/components/schemas/LotteryResult'
              readOnly: true
    Instagram:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          required:
            - post_url
            - prizes
            - use_likes
            - min_mentions
          properties:
            prizes:
              type: array
              items:
                $ref: '#/components/schemas/Prize'
            use_likes:
              type: boolean
              default: false
            min_mentions:
              type: integer
              default: 0
            post_url:
              type: string
            results:
              type: array
              items:
                $ref: '#/components/schemas/InstagramResult'
              readOnly: true
    Tiktok:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          required:
            - post_url
            - prizes
            - min_mentions
          properties:
            prizes:
              type: array
              items:
                $ref: '#/components/schemas/Prize'
            min_mentions:
              type: integer
              default: 0
            post_url:
              type: string
            results:
              type: array
              items:
                $ref: '#/components/schemas/TiktokResult'
              readOnly: true
    Link:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          required:
            - items
          properties:
            items_set1:
              type: array
              items:
                type: string
            items_set2:
              type: array
              items:
                type: string
            results:
              type: array
              items:
                $ref: '#/components/schemas/LinkResult'
              readOnly: true
    Shifts:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          required:
            - intervals
            - participants
          properties:
            intervals:
              type: array
              items:
                type: object
                required:
                  - start_time
                  - end_time
                properties:
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
            participants:
              type: array
              items:
                $ref: '#/components/schemas/Participant'
            results:
              type: array
              items:
                $ref: '#/components/schemas/ShiftsResult'
              readOnly: true
    Tournament:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          required:
            - participants
          properties:
            participants:
              type: array
              items:
                $ref: '#/components/schemas/Participant'
            results:
              type: array
              items:
                $ref: '#/components/schemas/TournamentResult'
              readOnly: true
    Groups:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          required:
            - participants
            - number_of_groups
          properties:
            participants:
              type: array
              items:
                $ref: '#/components/schemas/Participant'
            number_of_groups:
              type: integer
            results:
              type: array
              items:
                $ref: '#/components/schemas/GroupsResult'
              readOnly: true
    RandomNumber:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          required:
            - range_min
            - range_max
          properties:
            range_min:
              type: integer
            range_max:
              type: integer
            number_of_results:
              type: integer
              default: 1
            allow_repeated_results:
              type: boolean
              default: true
            results:
              type: array
              items:
                $ref: '#/components/schemas/RandomNumberResult'
              readOnly: true
    Letter:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          properties:
            number_of_results:
              type: integer
              default: 1
            allow_repeated_results:
              type: boolean
              default: true
            results:
              type: array
              items:
                $ref: '#/components/schemas/LetterResult'
              readOnly: true
    Coin:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/CoinResult'
              readOnly: true
    Spinner:
      allOf:
        - $ref: '#/components/schemas/BaseDraw'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/SpinnerResult'
              readOnly: true
    BaseResult:
      allOf:
        - $ref: '#/components/schemas/BaseObject'
        - type: object
          properties:
            schedule_date:
              type: string
              format: date-time
    RaffleResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: array
              items:
                type: object
                properties:
                  participant:
                    $ref: '#/components/schemas/Participant'
                  prize:
                    $ref: '#/components/schemas/Prize'
    InstagramResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: array
              items:
                type: object
                properties:
                  comment:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      userpic:
                        type: string
                      text:
                        type: string
                  prize:
                    $ref: '#/components/schemas/Prize'
    TiktokResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: array
              items:
                type: object
                properties:
                  comment:
                    type: object
                    properties:
                      id:
                        type: string
                      text:
                        type: string
                      username:
                        type: string
                      userpic:
                        type: string
                      userid:
                        type: string
                  prize:
                    $ref: '#/components/schemas/Prize'
    ShiftsResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: array
              items:
                type: object
                properties:
                  interval:
                    type: object
                    properties:
                      start_time:
                        type: string
                        format: date-time
                      end_time:
                        type: string
                        format: date-time
                  participants:
                    type: array
                    items:
                      $ref: '#/components/schemas/Participant'
    LinkResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: array
              items:
                type: object
                properties:
                  element1:
                    type: string
                  element2:
                    type: string
    LotteryResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: array
              items:
                $ref: '#/components/schemas/Participant'
    TournamentResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  participants:
                    type: array
                    items:
                      $ref: '#/components/schemas/Participant'
                  score:
                    type: string
                  winner_id:
                    type: string
                  next_match_id:
                    type: string
    GroupsResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: array
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Participant'
    RandomNumberResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: array
              items:
                type: integer
    LetterResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: array
              items:
                type: string
    SpinnerResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: integer
    CoinResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            value:
              nullable: true
              type: array
              items:
                maxLength: 1
                minLength: 1
                type: string
                enum:
                  - HEAD
                  - TAIL
    SecretSanta:
      type: object
      properties:
        language:
          type: string
          enum:
            - es
            - en
        participants:
          type: array
          items:
            maxLength: 500
            minLength: 3
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              exclusions:
                type: array
                items:
                  type: string
    SecretSantaResult:
      type: object
      properties:
        source:
          type: string
        target:
          type: string
    SecretSantaCreateResponse:
      type: object
      properties:
        id:
          type: string
          minLength: 1
    SecretSantaAdminResponse:
      type: object
      properties:
        id:
          type: string
          minLength: 1
        created_at:
          type: string
          format: date-time
        participants:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              revealed:
                type: boolean
    RedeemPromoCode:
      type: object
      required:
        - draw_id
        - code
      properties:
        code:
          type: string
        draw_id:
          type: string
    PaypalCreatePayload:
      type: object
      required:
        - draw_url
        - draw_id
        - options
      properties:
        options:
          type: array
          items:
            type: string
            enum:
              - CERTIFIED
              - ADFREE
              - SUPPORT
          minItems: 1
        draw_url:
          type: string
        draw_id:
          type: string
    PaypalResponse:
      type: object
      properties:
        redirect_url:
          type: string
    SecretSantaResendEmail:
      type: object
      properties:
        language:
          type: string
          enum:
            - es
            - en
        email:
          type: string
    SecretSantaResendEmailResponse:
      type: object
      properties:
        new_result:
          type: string
