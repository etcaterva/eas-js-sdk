/* tslint:disable */
/* eslint-disable */
/**
 * EAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Participant } from './Participant';
import {
    ParticipantFromJSON,
    ParticipantFromJSONTyped,
    ParticipantToJSON,
} from './Participant';

/**
 * 
 * @export
 * @interface TournamentFields
 */
export interface TournamentFields {
    /**
     * 
     * @type {Array<Participant>}
     * @memberof TournamentFields
     */
    participants: Array<Participant>;
}

/**
 * Check if a given object implements the TournamentFields interface.
 */
export function instanceOfTournamentFields(value: object): value is TournamentFields {
    if (!('participants' in value) || value['participants'] === undefined) return false;
    return true;
}

export function TournamentFieldsFromJSON(json: any): TournamentFields {
    return TournamentFieldsFromJSONTyped(json, false);
}

export function TournamentFieldsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TournamentFields {
    if (json == null) {
        return json;
    }
    return {
        
        'participants': ((json['participants'] as Array<any>).map(ParticipantFromJSON)),
    };
}

export function TournamentFieldsToJSON(value?: TournamentFields | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'participants': ((value['participants'] as Array<any>).map(ParticipantToJSON)),
    };
}

