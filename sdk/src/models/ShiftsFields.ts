/* tslint:disable */
/* eslint-disable */
/**
 * EAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ParticipantField } from './ParticipantField';
import {
    ParticipantFieldFromJSON,
    ParticipantFieldFromJSONTyped,
    ParticipantFieldToJSON,
} from './ParticipantField';
import type { ShiftsInterval } from './ShiftsInterval';
import {
    ShiftsIntervalFromJSON,
    ShiftsIntervalFromJSONTyped,
    ShiftsIntervalToJSON,
} from './ShiftsInterval';

/**
 * 
 * @export
 * @interface ShiftsFields
 */
export interface ShiftsFields {
    /**
     * 
     * @type {Array<ShiftsInterval>}
     * @memberof ShiftsFields
     */
    intervals: Array<ShiftsInterval>;
    /**
     * 
     * @type {Array<ParticipantField>}
     * @memberof ShiftsFields
     */
    participants: Array<ParticipantField>;
}

/**
 * Check if a given object implements the ShiftsFields interface.
 */
export function instanceOfShiftsFields(value: object): value is ShiftsFields {
    if (!('intervals' in value) || value['intervals'] === undefined) return false;
    if (!('participants' in value) || value['participants'] === undefined) return false;
    return true;
}

export function ShiftsFieldsFromJSON(json: any): ShiftsFields {
    return ShiftsFieldsFromJSONTyped(json, false);
}

export function ShiftsFieldsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShiftsFields {
    if (json == null) {
        return json;
    }
    return {
        
        'intervals': ((json['intervals'] as Array<any>).map(ShiftsIntervalFromJSON)),
        'participants': ((json['participants'] as Array<any>).map(ParticipantFieldFromJSON)),
    };
}

export function ShiftsFieldsToJSON(value?: ShiftsFields | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'intervals': ((value['intervals'] as Array<any>).map(ShiftsIntervalToJSON)),
        'participants': ((value['participants'] as Array<any>).map(ParticipantFieldToJSON)),
    };
}

