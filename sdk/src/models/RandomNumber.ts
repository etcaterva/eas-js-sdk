/* tslint:disable */
/* eslint-disable */
/**
 * EAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DrawMetadata } from './DrawMetadata';
import {
    DrawMetadataFromJSON,
    DrawMetadataFromJSONTyped,
    DrawMetadataToJSON,
} from './DrawMetadata';
import type { BaseDraw } from './BaseDraw';
import {
    BaseDrawFromJSON,
    BaseDrawFromJSONTyped,
    BaseDrawToJSON,
} from './BaseDraw';
import type { RandomNumberResult } from './RandomNumberResult';
import {
    RandomNumberResultFromJSON,
    RandomNumberResultFromJSONTyped,
    RandomNumberResultToJSON,
} from './RandomNumberResult';

/**
 * 
 * @export
 * @interface RandomNumber
 */
export interface RandomNumber extends BaseDraw {
    /**
     * 
     * @type {number}
     * @memberof RandomNumber
     */
    rangeMin: number;
    /**
     * 
     * @type {number}
     * @memberof RandomNumber
     */
    rangeMax: number;
    /**
     * 
     * @type {number}
     * @memberof RandomNumber
     */
    numberOfResults?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RandomNumber
     */
    allowRepeatedResults?: boolean;
    /**
     * 
     * @type {Array<RandomNumberResult>}
     * @memberof RandomNumber
     */
    readonly results?: Array<RandomNumberResult>;
}



/**
 * Check if a given object implements the RandomNumber interface.
 */
export function instanceOfRandomNumber(value: object): value is RandomNumber {
    if (!('rangeMin' in value) || value['rangeMin'] === undefined) return false;
    if (!('rangeMax' in value) || value['rangeMax'] === undefined) return false;
    return true;
}

export function RandomNumberFromJSON(json: any): RandomNumber {
    return RandomNumberFromJSONTyped(json, false);
}

export function RandomNumberFromJSONTyped(json: any, ignoreDiscriminator: boolean): RandomNumber {
    if (json == null) {
        return json;
    }
    return {
        ...BaseDrawFromJSONTyped(json, ignoreDiscriminator),
        'rangeMin': json['range_min'],
        'rangeMax': json['range_max'],
        'numberOfResults': json['number_of_results'] == null ? undefined : json['number_of_results'],
        'allowRepeatedResults': json['allow_repeated_results'] == null ? undefined : json['allow_repeated_results'],
        'results': json['results'] == null ? undefined : ((json['results'] as Array<any>).map(RandomNumberResultFromJSON)),
    };
}

export function RandomNumberToJSON(value?: Omit<RandomNumber, 'results'|'id'|'created_at'|'updated_at'|'private_id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...BaseDrawToJSON(value),
        'range_min': value['rangeMin'],
        'range_max': value['rangeMax'],
        'number_of_results': value['numberOfResults'],
        'allow_repeated_results': value['allowRepeatedResults'],
    };
}

