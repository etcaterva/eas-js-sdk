/* tslint:disable */
/* eslint-disable */
/**
 * EAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateInstagramPayload,
  DrawReTossPayload,
  DrawTossPayload,
  Instagram,
  InstagramResult,
} from '../models/index';
import {
    CreateInstagramPayloadFromJSON,
    CreateInstagramPayloadToJSON,
    DrawReTossPayloadFromJSON,
    DrawReTossPayloadToJSON,
    DrawTossPayloadFromJSON,
    DrawTossPayloadToJSON,
    InstagramFromJSON,
    InstagramToJSON,
    InstagramResultFromJSON,
    InstagramResultToJSON,
} from '../models/index';

export interface InstagramCreateRequest {
    createInstagramPayload: CreateInstagramPayload;
}

export interface InstagramReadRequest {
    id: string;
}

export interface InstagramRetossRequest {
    id: string;
    drawReTossPayload?: DrawReTossPayload;
}

export interface InstagramTossRequest {
    id: string;
    drawTossPayload: DrawTossPayload;
}

/**
 * InstagramApi - interface
 * 
 * @export
 * @interface InstagramApiInterface
 */
export interface InstagramApiInterface {
    /**
     * 
     * @param {CreateInstagramPayload} createInstagramPayload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstagramApiInterface
     */
    instagramCreateRaw(requestParameters: InstagramCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Instagram>>;

    /**
     */
    instagramCreate(requestParameters: InstagramCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Instagram>;

    /**
     * 
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstagramApiInterface
     */
    instagramReadRaw(requestParameters: InstagramReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Instagram>>;

    /**
     */
    instagramRead(requestParameters: InstagramReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Instagram>;

    /**
     * 
     * @param {string} id 
     * @param {DrawReTossPayload} [drawReTossPayload] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstagramApiInterface
     */
    instagramRetossRaw(requestParameters: InstagramRetossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstagramResult>>;

    /**
     */
    instagramRetoss(requestParameters: InstagramRetossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstagramResult>;

    /**
     * 
     * @param {string} id 
     * @param {DrawTossPayload} drawTossPayload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstagramApiInterface
     */
    instagramTossRaw(requestParameters: InstagramTossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstagramResult>>;

    /**
     */
    instagramToss(requestParameters: InstagramTossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstagramResult>;

}

/**
 * 
 */
export class InstagramApi extends runtime.BaseAPI implements InstagramApiInterface {

    /**
     */
    async instagramCreateRaw(requestParameters: InstagramCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Instagram>> {
        if (requestParameters['createInstagramPayload'] == null) {
            throw new runtime.RequiredError(
                'createInstagramPayload',
                'Required parameter "createInstagramPayload" was null or undefined when calling instagramCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/instagram/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateInstagramPayloadToJSON(requestParameters['createInstagramPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstagramFromJSON(jsonValue));
    }

    /**
     */
    async instagramCreate(requestParameters: InstagramCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Instagram> {
        const response = await this.instagramCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async instagramReadRaw(requestParameters: InstagramReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Instagram>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling instagramRead().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/instagram/{id}/`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstagramFromJSON(jsonValue));
    }

    /**
     */
    async instagramRead(requestParameters: InstagramReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Instagram> {
        const response = await this.instagramReadRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async instagramRetossRaw(requestParameters: InstagramRetossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstagramResult>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling instagramRetoss().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/instagram/{id}/retoss/`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: DrawReTossPayloadToJSON(requestParameters['drawReTossPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstagramResultFromJSON(jsonValue));
    }

    /**
     */
    async instagramRetoss(requestParameters: InstagramRetossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstagramResult> {
        const response = await this.instagramRetossRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async instagramTossRaw(requestParameters: InstagramTossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstagramResult>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling instagramToss().'
            );
        }

        if (requestParameters['drawTossPayload'] == null) {
            throw new runtime.RequiredError(
                'drawTossPayload',
                'Required parameter "drawTossPayload" was null or undefined when calling instagramToss().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/instagram/{id}/toss/`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DrawTossPayloadToJSON(requestParameters['drawTossPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstagramResultFromJSON(jsonValue));
    }

    /**
     */
    async instagramToss(requestParameters: InstagramTossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstagramResult> {
        const response = await this.instagramTossRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
