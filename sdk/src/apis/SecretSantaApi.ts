/* tslint:disable */
/* eslint-disable */
/**
 * EAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  SecretSanta,
  SecretSantaAdminResponse,
  SecretSantaCreateResponse,
  SecretSantaResendEmail,
  SecretSantaResendEmailResponse,
  SecretSantaResult,
} from '../models/index';
import {
    SecretSantaFromJSON,
    SecretSantaToJSON,
    SecretSantaAdminResponseFromJSON,
    SecretSantaAdminResponseToJSON,
    SecretSantaCreateResponseFromJSON,
    SecretSantaCreateResponseToJSON,
    SecretSantaResendEmailFromJSON,
    SecretSantaResendEmailToJSON,
    SecretSantaResendEmailResponseFromJSON,
    SecretSantaResendEmailResponseToJSON,
    SecretSantaResultFromJSON,
    SecretSantaResultToJSON,
} from '../models/index';

export interface SecretSantaCreateRequest {
    secretSanta: SecretSanta;
}

export interface SecretSantaResultAdminGetRequest {
    id: string;
}

export interface SecretSantaResultAdminPostRequest {
    drawId: string;
    resultId: string;
    secretSantaResendEmail?: SecretSantaResendEmail;
}

export interface SecretSantaResultGetRequest {
    id: string;
}

/**
 * SecretSantaApi - interface
 * 
 * @export
 * @interface SecretSantaApiInterface
 */
export interface SecretSantaApiInterface {
    /**
     * 
     * @param {SecretSanta} secretSanta 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecretSantaApiInterface
     */
    secretSantaCreateRaw(requestParameters: SecretSantaCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSantaCreateResponse>>;

    /**
     */
    secretSantaCreate(requestParameters: SecretSantaCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSantaCreateResponse>;

    /**
     * 
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecretSantaApiInterface
     */
    secretSantaResultAdminGetRaw(requestParameters: SecretSantaResultAdminGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSantaAdminResponse>>;

    /**
     */
    secretSantaResultAdminGet(requestParameters: SecretSantaResultAdminGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSantaAdminResponse>;

    /**
     * 
     * @param {string} drawId 
     * @param {string} resultId 
     * @param {SecretSantaResendEmail} [secretSantaResendEmail] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecretSantaApiInterface
     */
    secretSantaResultAdminPostRaw(requestParameters: SecretSantaResultAdminPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSantaResendEmailResponse>>;

    /**
     */
    secretSantaResultAdminPost(requestParameters: SecretSantaResultAdminPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSantaResendEmailResponse>;

    /**
     * 
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecretSantaApiInterface
     */
    secretSantaResultGetRaw(requestParameters: SecretSantaResultGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSantaResult>>;

    /**
     */
    secretSantaResultGet(requestParameters: SecretSantaResultGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSantaResult>;

}

/**
 * 
 */
export class SecretSantaApi extends runtime.BaseAPI implements SecretSantaApiInterface {

    /**
     */
    async secretSantaCreateRaw(requestParameters: SecretSantaCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSantaCreateResponse>> {
        if (requestParameters['secretSanta'] == null) {
            throw new runtime.RequiredError(
                'secretSanta',
                'Required parameter "secretSanta" was null or undefined when calling secretSantaCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/secret-santa/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SecretSantaToJSON(requestParameters['secretSanta']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SecretSantaCreateResponseFromJSON(jsonValue));
    }

    /**
     */
    async secretSantaCreate(requestParameters: SecretSantaCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSantaCreateResponse> {
        const response = await this.secretSantaCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async secretSantaResultAdminGetRaw(requestParameters: SecretSantaResultAdminGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSantaAdminResponse>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling secretSantaResultAdminGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/secret-santa-admin/{id}/`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SecretSantaAdminResponseFromJSON(jsonValue));
    }

    /**
     */
    async secretSantaResultAdminGet(requestParameters: SecretSantaResultAdminGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSantaAdminResponse> {
        const response = await this.secretSantaResultAdminGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async secretSantaResultAdminPostRaw(requestParameters: SecretSantaResultAdminPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSantaResendEmailResponse>> {
        if (requestParameters['drawId'] == null) {
            throw new runtime.RequiredError(
                'drawId',
                'Required parameter "drawId" was null or undefined when calling secretSantaResultAdminPost().'
            );
        }

        if (requestParameters['resultId'] == null) {
            throw new runtime.RequiredError(
                'resultId',
                'Required parameter "resultId" was null or undefined when calling secretSantaResultAdminPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/secret-santa-admin/{draw_id}/{result_id}/`.replace(`{${"draw_id"}}`, encodeURIComponent(String(requestParameters['drawId']))).replace(`{${"result_id"}}`, encodeURIComponent(String(requestParameters['resultId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SecretSantaResendEmailToJSON(requestParameters['secretSantaResendEmail']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SecretSantaResendEmailResponseFromJSON(jsonValue));
    }

    /**
     */
    async secretSantaResultAdminPost(requestParameters: SecretSantaResultAdminPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSantaResendEmailResponse> {
        const response = await this.secretSantaResultAdminPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async secretSantaResultGetRaw(requestParameters: SecretSantaResultGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSantaResult>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling secretSantaResultGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/secret-santa/{id}/`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SecretSantaResultFromJSON(jsonValue));
    }

    /**
     */
    async secretSantaResultGet(requestParameters: SecretSantaResultGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSantaResult> {
        const response = await this.secretSantaResultGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
