/* tslint:disable */
/* eslint-disable */
/**
 * EAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateShiftsPayload,
  DrawTossPayload,
  Shifts,
  ShiftsResult,
} from '../models/index';
import {
    CreateShiftsPayloadFromJSON,
    CreateShiftsPayloadToJSON,
    DrawTossPayloadFromJSON,
    DrawTossPayloadToJSON,
    ShiftsFromJSON,
    ShiftsToJSON,
    ShiftsResultFromJSON,
    ShiftsResultToJSON,
} from '../models/index';

export interface ShiftsCreateRequest {
    createShiftsPayload: CreateShiftsPayload;
}

export interface ShiftsReadRequest {
    id: string;
}

export interface ShiftsTossRequest {
    id: string;
    drawTossPayload: DrawTossPayload;
}

/**
 * ShiftsApi - interface
 * 
 * @export
 * @interface ShiftsApiInterface
 */
export interface ShiftsApiInterface {
    /**
     * 
     * @param {CreateShiftsPayload} createShiftsPayload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShiftsApiInterface
     */
    shiftsCreateRaw(requestParameters: ShiftsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Shifts>>;

    /**
     */
    shiftsCreate(requestParameters: ShiftsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Shifts>;

    /**
     * 
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShiftsApiInterface
     */
    shiftsReadRaw(requestParameters: ShiftsReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Shifts>>;

    /**
     */
    shiftsRead(requestParameters: ShiftsReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Shifts>;

    /**
     * 
     * @param {string} id 
     * @param {DrawTossPayload} drawTossPayload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShiftsApiInterface
     */
    shiftsTossRaw(requestParameters: ShiftsTossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShiftsResult>>;

    /**
     */
    shiftsToss(requestParameters: ShiftsTossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShiftsResult>;

}

/**
 * 
 */
export class ShiftsApi extends runtime.BaseAPI implements ShiftsApiInterface {

    /**
     */
    async shiftsCreateRaw(requestParameters: ShiftsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Shifts>> {
        if (requestParameters['createShiftsPayload'] == null) {
            throw new runtime.RequiredError(
                'createShiftsPayload',
                'Required parameter "createShiftsPayload" was null or undefined when calling shiftsCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/shifts/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateShiftsPayloadToJSON(requestParameters['createShiftsPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShiftsFromJSON(jsonValue));
    }

    /**
     */
    async shiftsCreate(requestParameters: ShiftsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Shifts> {
        const response = await this.shiftsCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async shiftsReadRaw(requestParameters: ShiftsReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Shifts>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling shiftsRead().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/shifts/{id}/`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShiftsFromJSON(jsonValue));
    }

    /**
     */
    async shiftsRead(requestParameters: ShiftsReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Shifts> {
        const response = await this.shiftsReadRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async shiftsTossRaw(requestParameters: ShiftsTossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShiftsResult>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling shiftsToss().'
            );
        }

        if (requestParameters['drawTossPayload'] == null) {
            throw new runtime.RequiredError(
                'drawTossPayload',
                'Required parameter "drawTossPayload" was null or undefined when calling shiftsToss().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/shifts/{id}/toss/`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DrawTossPayloadToJSON(requestParameters['drawTossPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShiftsResultFromJSON(jsonValue));
    }

    /**
     */
    async shiftsToss(requestParameters: ShiftsTossRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShiftsResult> {
        const response = await this.shiftsTossRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
