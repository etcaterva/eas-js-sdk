/**
 * EAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.2
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BaseDraw', 'model/BaseObject', 'model/BaseResult', 'model/Coin', 'model/CoinResult', 'model/DrawMetadata', 'model/DrawTossPayload', 'model/Groups', 'model/GroupsResult', 'model/Letter', 'model/LetterResult', 'model/Lottery', 'model/LotteryResult', 'model/Participant', 'model/Prize', 'model/Raffle', 'model/RaffleResult', 'model/RaffleResultValue', 'model/RandomNumber', 'model/RandomNumberResult', 'model/Spinner', 'model/SpinnerResult', 'api/CoinApi', 'api/GroupsApi', 'api/LetterApi', 'api/LotteryApi', 'api/RaffleApi', 'api/RandomNumberApi', 'api/SpinnerApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/BaseDraw'), require('./model/BaseObject'), require('./model/BaseResult'), require('./model/Coin'), require('./model/CoinResult'), require('./model/DrawMetadata'), require('./model/DrawTossPayload'), require('./model/Groups'), require('./model/GroupsResult'), require('./model/Letter'), require('./model/LetterResult'), require('./model/Lottery'), require('./model/LotteryResult'), require('./model/Participant'), require('./model/Prize'), require('./model/Raffle'), require('./model/RaffleResult'), require('./model/RaffleResultValue'), require('./model/RandomNumber'), require('./model/RandomNumberResult'), require('./model/Spinner'), require('./model/SpinnerResult'), require('./api/CoinApi'), require('./api/GroupsApi'), require('./api/LetterApi'), require('./api/LotteryApi'), require('./api/RaffleApi'), require('./api/RandomNumberApi'), require('./api/SpinnerApi'));
  }
}(function(ApiClient, BaseDraw, BaseObject, BaseResult, Coin, CoinResult, DrawMetadata, DrawTossPayload, Groups, GroupsResult, Letter, LetterResult, Lottery, LotteryResult, Participant, Prize, Raffle, RaffleResult, RaffleResultValue, RandomNumber, RandomNumberResult, Spinner, SpinnerResult, CoinApi, GroupsApi, LetterApi, LotteryApi, RaffleApi, RandomNumberApi, SpinnerApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var EchaloasuerteJsSdk = require('index'); // See note below*.
   * var xxxSvc = new EchaloasuerteJsSdk.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new EchaloasuerteJsSdk.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new EchaloasuerteJsSdk.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new EchaloasuerteJsSdk.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The BaseDraw model constructor.
     * @property {module:model/BaseDraw}
     */
    BaseDraw: BaseDraw,
    /**
     * The BaseObject model constructor.
     * @property {module:model/BaseObject}
     */
    BaseObject: BaseObject,
    /**
     * The BaseResult model constructor.
     * @property {module:model/BaseResult}
     */
    BaseResult: BaseResult,
    /**
     * The Coin model constructor.
     * @property {module:model/Coin}
     */
    Coin: Coin,
    /**
     * The CoinResult model constructor.
     * @property {module:model/CoinResult}
     */
    CoinResult: CoinResult,
    /**
     * The DrawMetadata model constructor.
     * @property {module:model/DrawMetadata}
     */
    DrawMetadata: DrawMetadata,
    /**
     * The DrawTossPayload model constructor.
     * @property {module:model/DrawTossPayload}
     */
    DrawTossPayload: DrawTossPayload,
    /**
     * The Groups model constructor.
     * @property {module:model/Groups}
     */
    Groups: Groups,
    /**
     * The GroupsResult model constructor.
     * @property {module:model/GroupsResult}
     */
    GroupsResult: GroupsResult,
    /**
     * The Letter model constructor.
     * @property {module:model/Letter}
     */
    Letter: Letter,
    /**
     * The LetterResult model constructor.
     * @property {module:model/LetterResult}
     */
    LetterResult: LetterResult,
    /**
     * The Lottery model constructor.
     * @property {module:model/Lottery}
     */
    Lottery: Lottery,
    /**
     * The LotteryResult model constructor.
     * @property {module:model/LotteryResult}
     */
    LotteryResult: LotteryResult,
    /**
     * The Participant model constructor.
     * @property {module:model/Participant}
     */
    Participant: Participant,
    /**
     * The Prize model constructor.
     * @property {module:model/Prize}
     */
    Prize: Prize,
    /**
     * The Raffle model constructor.
     * @property {module:model/Raffle}
     */
    Raffle: Raffle,
    /**
     * The RaffleResult model constructor.
     * @property {module:model/RaffleResult}
     */
    RaffleResult: RaffleResult,
    /**
     * The RaffleResultValue model constructor.
     * @property {module:model/RaffleResultValue}
     */
    RaffleResultValue: RaffleResultValue,
    /**
     * The RandomNumber model constructor.
     * @property {module:model/RandomNumber}
     */
    RandomNumber: RandomNumber,
    /**
     * The RandomNumberResult model constructor.
     * @property {module:model/RandomNumberResult}
     */
    RandomNumberResult: RandomNumberResult,
    /**
     * The Spinner model constructor.
     * @property {module:model/Spinner}
     */
    Spinner: Spinner,
    /**
     * The SpinnerResult model constructor.
     * @property {module:model/SpinnerResult}
     */
    SpinnerResult: SpinnerResult,
    /**
     * The CoinApi service constructor.
     * @property {module:api/CoinApi}
     */
    CoinApi: CoinApi,
    /**
     * The GroupsApi service constructor.
     * @property {module:api/GroupsApi}
     */
    GroupsApi: GroupsApi,
    /**
     * The LetterApi service constructor.
     * @property {module:api/LetterApi}
     */
    LetterApi: LetterApi,
    /**
     * The LotteryApi service constructor.
     * @property {module:api/LotteryApi}
     */
    LotteryApi: LotteryApi,
    /**
     * The RaffleApi service constructor.
     * @property {module:api/RaffleApi}
     */
    RaffleApi: RaffleApi,
    /**
     * The RandomNumberApi service constructor.
     * @property {module:api/RandomNumberApi}
     */
    RandomNumberApi: RandomNumberApi,
    /**
     * The SpinnerApi service constructor.
     * @property {module:api/SpinnerApi}
     */
    SpinnerApi: SpinnerApi
  };

  return exports;
}));
