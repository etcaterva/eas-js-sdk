/**
 * EAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseDraw from './BaseDraw';
import DrawMetadata from './DrawMetadata';
import Participant from './Participant';
import Prize from './Prize';
import RaffleAllOf from './RaffleAllOf';
import RaffleResult from './RaffleResult';

/**
 * The Raffle model module.
 * @module model/Raffle
 * @version 0.0.1
 */
class Raffle {
    /**
     * Constructs a new <code>Raffle</code>.
     * @alias module:model/Raffle
     * @implements module:model/BaseDraw
     * @implements module:model/RaffleAllOf
     * @param prizes {Array.<module:model/Prize>} 
     * @param participants {Array.<module:model/Participant>} 
     */
    constructor(prizes, participants) { 
        BaseDraw.initialize(this);RaffleAllOf.initialize(this, prizes, participants);
        Raffle.initialize(this, prizes, participants);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, prizes, participants) { 
        obj['prizes'] = prizes;
        obj['participants'] = participants;
    }

    /**
     * Constructs a <code>Raffle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Raffle} obj Optional instance to populate.
     * @return {module:model/Raffle} The populated <code>Raffle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Raffle();
            BaseDraw.constructFromObject(data, obj);
            RaffleAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('private_id')) {
                obj['private_id'] = ApiClient.convertToType(data['private_id'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], [DrawMetadata]);
            }
            if (data.hasOwnProperty('prizes')) {
                obj['prizes'] = ApiClient.convertToType(data['prizes'], [Prize]);
            }
            if (data.hasOwnProperty('participants')) {
                obj['participants'] = ApiClient.convertToType(data['participants'], [Participant]);
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [RaffleResult]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Raffle.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
Raffle.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
Raffle.prototype['updated_at'] = undefined;

/**
 * @member {String} title
 */
Raffle.prototype['title'] = undefined;

/**
 * @member {String} description
 */
Raffle.prototype['description'] = undefined;

/**
 * @member {String} private_id
 */
Raffle.prototype['private_id'] = undefined;

/**
 * @member {Array.<module:model/DrawMetadata>} metadata
 */
Raffle.prototype['metadata'] = undefined;

/**
 * @member {Array.<module:model/Prize>} prizes
 */
Raffle.prototype['prizes'] = undefined;

/**
 * @member {Array.<module:model/Participant>} participants
 */
Raffle.prototype['participants'] = undefined;

/**
 * @member {Array.<module:model/RaffleResult>} results
 */
Raffle.prototype['results'] = undefined;


// Implement BaseDraw interface:
/**
 * @member {String} id
 */
BaseDraw.prototype['id'] = undefined;
/**
 * @member {Date} created_at
 */
BaseDraw.prototype['created_at'] = undefined;
/**
 * @member {Date} updated_at
 */
BaseDraw.prototype['updated_at'] = undefined;
/**
 * @member {String} title
 */
BaseDraw.prototype['title'] = undefined;
/**
 * @member {String} description
 */
BaseDraw.prototype['description'] = undefined;
/**
 * @member {String} private_id
 */
BaseDraw.prototype['private_id'] = undefined;
/**
 * @member {Array.<module:model/DrawMetadata>} metadata
 */
BaseDraw.prototype['metadata'] = undefined;
// Implement RaffleAllOf interface:
/**
 * @member {Array.<module:model/Prize>} prizes
 */
RaffleAllOf.prototype['prizes'] = undefined;
/**
 * @member {Array.<module:model/Participant>} participants
 */
RaffleAllOf.prototype['participants'] = undefined;
/**
 * @member {Array.<module:model/RaffleResult>} results
 */
RaffleAllOf.prototype['results'] = undefined;




export default Raffle;

