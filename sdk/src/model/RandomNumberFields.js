/**
 * EAS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RandomNumberFields model module.
 * @module model/RandomNumberFields
 * @version 1.0.0
 */
class RandomNumberFields {
    /**
     * Constructs a new <code>RandomNumberFields</code>.
     * @alias module:model/RandomNumberFields
     * @param rangeMin {Number} 
     * @param rangeMax {Number} 
     * @param numberOfResults {Number} 
     * @param allowRepeatedResults {Boolean} 
     */
    constructor(rangeMin, rangeMax, numberOfResults, allowRepeatedResults) { 
        
        RandomNumberFields.initialize(this, rangeMin, rangeMax, numberOfResults, allowRepeatedResults);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, rangeMin, rangeMax, numberOfResults, allowRepeatedResults) { 
        obj['range_min'] = rangeMin;
        obj['range_max'] = rangeMax;
        obj['number_of_results'] = numberOfResults || 1;
        obj['allow_repeated_results'] = allowRepeatedResults || true;
    }

    /**
     * Constructs a <code>RandomNumberFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RandomNumberFields} obj Optional instance to populate.
     * @return {module:model/RandomNumberFields} The populated <code>RandomNumberFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RandomNumberFields();

            if (data.hasOwnProperty('range_min')) {
                obj['range_min'] = ApiClient.convertToType(data['range_min'], 'Number');
            }
            if (data.hasOwnProperty('range_max')) {
                obj['range_max'] = ApiClient.convertToType(data['range_max'], 'Number');
            }
            if (data.hasOwnProperty('number_of_results')) {
                obj['number_of_results'] = ApiClient.convertToType(data['number_of_results'], 'Number');
            }
            if (data.hasOwnProperty('allow_repeated_results')) {
                obj['allow_repeated_results'] = ApiClient.convertToType(data['allow_repeated_results'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RandomNumberFields</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RandomNumberFields</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RandomNumberFields.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

RandomNumberFields.RequiredProperties = ["range_min", "range_max", "number_of_results", "allow_repeated_results"];

/**
 * @member {Number} range_min
 */
RandomNumberFields.prototype['range_min'] = undefined;

/**
 * @member {Number} range_max
 */
RandomNumberFields.prototype['range_max'] = undefined;

/**
 * @member {Number} number_of_results
 * @default 1
 */
RandomNumberFields.prototype['number_of_results'] = 1;

/**
 * @member {Boolean} allow_repeated_results
 * @default true
 */
RandomNumberFields.prototype['allow_repeated_results'] = true;






export default RandomNumberFields;

